<?xml version="1.0" encoding="us-ascii"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.props" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.props')" />
  <Import Project="$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.props" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{99A96F3C-C8E1-4FCD-9ADA-AAEECED6CBCE}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <RootNamespace>begibot</RootNamespace>
    <NuGetPackageImportStamp>af21d5ce</NuGetPackageImportStamp>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="Exists('$(SolutionDir)\CommonSettings.props')">
    <Import Project="$(SolutionDir)\CommonSettings.props" />
  </ImportGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Link>
      <AdditionalDependencies>libcaffe.lib;$(CudaDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>"$(ScriptsDir)\FixGFlagsNaming.cmd" "$(OutDir)" $(Configuration)</Command>
    </PostBuildEvent>
    <ClCompile>
      <AdditionalIncludeDirectories>..\..\dl\include</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>_DEBUG;begibot_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <TreatWarningAsError>false</TreatWarningAsError>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Link>
      <AdditionalDependencies>libcaffe.lib;$(CudaDependencies);%(AdditionalDependencies)</AdditionalDependencies>
      <SubSystem>Console</SubSystem>
    </Link>
    <PostBuildEvent>
      <Command>"$(ScriptsDir)\FixGFlagsNaming.cmd" "$(OutDir)" $(Configuration)</Command>
    </PostBuildEvent>
    <ClCompile>
      <AdditionalIncludeDirectories>..\..\dl\include</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;begibot_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <TreatWarningAsError>false</TreatWarningAsError>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectReference Include="$(SolutionDir)\libcaffe\libcaffe.vcxproj">
      <Project>{a9acef83-7b63-4574-a554-89ce869ea141}</Project>
      <Private>false</Private>
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <CopyLocalSatelliteAssemblies>false</CopyLocalSatelliteAssemblies>
      <LinkLibraryDependencies>true</LinkLibraryDependencies>
      <UseLibraryDependencyInputs>true</UseLibraryDependencyInputs>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\dl\src\common.cpp" />
    <ClCompile Include="..\..\dl\src\dc.cpp" />
    <ClCompile Include="..\..\dl\src\dl.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\dl\include\dl.h" />
    <ClInclude Include="..\..\dl\src\common.h" />
    <ClInclude Include="..\..\dl\src\dc.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Import Project="$(SolutionDir)\CommonSettings.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\OpenBLAS.0.2.14.1\build\native\openblas.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\OpenBLAS.0.2.14.1\build\native\openblas.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\hdf5-v120-complete.1.8.15.2\build\native\hdf5-v120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\hdf5-v120-complete.1.8.15.2\build\native\hdf5-v120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost_chrono-vc120.1.59.0.0\build\native\boost_chrono-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost_chrono-vc120.1.59.0.0\build\native\boost_chrono-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost_date_time-vc120.1.59.0.0\build\native\boost_date_time-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost_date_time-vc120.1.59.0.0\build\native\boost_date_time-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost_filesystem-vc120.1.59.0.0\build\native\boost_filesystem-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost_filesystem-vc120.1.59.0.0\build\native\boost_filesystem-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost_system-vc120.1.59.0.0\build\native\boost_system-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost_system-vc120.1.59.0.0\build\native\boost_system-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost.1.59.0.0\build\native\boost.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost.1.59.0.0\build\native\boost.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost_thread-vc120.1.59.0.0\build\native\boost_thread-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost_thread-vc120.1.59.0.0\build\native\boost_thread-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\boost_python2.7-vc120.1.59.0.0\build\native\boost_python-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\boost_python2.7-vc120.1.59.0.0\build\native\boost_python-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\protobuf-v120.2.6.1\build\native\protobuf-v120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\protobuf-v120.2.6.1\build\native\protobuf-v120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\LevelDB-vc120.1.2.0.0\build\native\LevelDB-vc120.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\LevelDB-vc120.1.2.0.0\build\native\LevelDB-vc120.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\lmdb-v120-clean.0.9.14.0\build\native\lmdb-v120-clean.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\lmdb-v120-clean.0.9.14.0\build\native\lmdb-v120-clean.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\opencv3.1.redist.1.0\build\native\opencv3.1.redist.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\opencv3.1.redist.1.0\build\native\opencv3.1.redist.targets')" />
    <Import Project="$(SolutionDir)..\..\..\NugetPackages\opencv3.1.1.0\build\native\opencv3.1.targets" Condition="Exists('$(SolutionDir)..\..\..\NugetPackages\opencv3.1.1.0\build\native\opencv3.1.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\OpenBLAS.0.2.14.1\build\native\openblas.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\OpenBLAS.0.2.14.1\build\native\openblas.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\hdf5-v120-complete.1.8.15.2\build\native\hdf5-v120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\hdf5-v120-complete.1.8.15.2\build\native\hdf5-v120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost_chrono-vc120.1.59.0.0\build\native\boost_chrono-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost_chrono-vc120.1.59.0.0\build\native\boost_chrono-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost_date_time-vc120.1.59.0.0\build\native\boost_date_time-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost_date_time-vc120.1.59.0.0\build\native\boost_date_time-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost_filesystem-vc120.1.59.0.0\build\native\boost_filesystem-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost_filesystem-vc120.1.59.0.0\build\native\boost_filesystem-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost_system-vc120.1.59.0.0\build\native\boost_system-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost_system-vc120.1.59.0.0\build\native\boost_system-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost.1.59.0.0\build\native\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost.1.59.0.0\build\native\boost.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost_thread-vc120.1.59.0.0\build\native\boost_thread-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost_thread-vc120.1.59.0.0\build\native\boost_thread-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\boost_python2.7-vc120.1.59.0.0\build\native\boost_python-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\boost_python2.7-vc120.1.59.0.0\build\native\boost_python-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.props')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.props'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\gflags.2.1.2.1\build\native\gflags.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.props')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.props'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\glog.0.3.3.0\build\native\glog.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\protobuf-v120.2.6.1\build\native\protobuf-v120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\protobuf-v120.2.6.1\build\native\protobuf-v120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\LevelDB-vc120.1.2.0.0\build\native\LevelDB-vc120.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\LevelDB-vc120.1.2.0.0\build\native\LevelDB-vc120.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\lmdb-v120-clean.0.9.14.0\build\native\lmdb-v120-clean.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\lmdb-v120-clean.0.9.14.0\build\native\lmdb-v120-clean.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\opencv3.1.redist.1.0\build\native\opencv3.1.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\opencv3.1.redist.1.0\build\native\opencv3.1.redist.targets'))" />
    <Error Condition="!Exists('$(SolutionDir)..\..\..\NugetPackages\opencv3.1.1.0\build\native\opencv3.1.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)..\..\..\NugetPackages\opencv3.1.1.0\build\native\opencv3.1.targets'))" />
  </Target>
</Project>